columnWidth(columns = grid.columns, g = grid.gutter)
    size = (columns * grid.column) + ((columns - 1) * g)
    return size

relativeWidth(w = 1, context = grid.columns)
    size = (w / columnWidth(context)) * 100
    return size

columns(columns = 1, context = grid.columns)
    size = relativeWidth(columnWidth(columns), context)
    return unit(size, '%')

gutterWidth(w = 1, context = grid.columns, gutter = grid.gutter, )
    size = relativeWidth(gutter, context)
    return unit(size, '%')

relW(w = 1, context = grid.columns)
    size = (w / columnWidth(context)) * 100
    return unit(size, '%')

rela(w = 1, width = grid.width)
    size = (w / width) * 100
    return unit(size, '%')

col(args, omega=null)
    if args[1]
        width columns(args[0], args[1])
        margin-right gutterWidth(args[0], args[1])
    else
        width columns(args[0], 12)
        margin-right gutterWidth(args[0], 12)

    if omega
        float right
        margin-right 0
    else
        float left
    min-height 1px

span(args, omega=null)
    if args[1]
        width columns(args[0], args[1])
    else
        width columns(args[0], 12)

    if omega
        float right
    else
        float left
    min-height 1px

